trigger:
  branches:
    include:
      - '*'
    exclude:
      - refs/pull/*/head
  paths:
    exclude:
      - docs/*
      - .github/*

# Global variables
variables:
  buildConfiguration: Debug
  buildPlatform: x64
  dotnetCoreSdkVersion: 3.1.107
  dotnetCoreSdk5Version: 5.0.100
  ddApiKey: $(DD_API_KEY)
  DD_DOTNET_TRACER_MSBUILD:
  nugetNativeCacheFolder: $(System.DefaultWorkingDirectory)/packages
  nugetManagedCacheFolder: $(System.DefaultWorkingDirectory)/.nuget_cache
  dotnetCache: $(Agent.ToolsDirectory)/dotnet

# Declare the datadog agent as a resource to be used as a pipeline service
resources:
  containers:
  - container: dd_agent
    image: datadog/agent
    ports:
    - 8126:8126
    env:
      DD_API_KEY: $(ddApiKey)
      DD_INSIDE_CI: true

# Stages
stages:

# native build stage
- stage: native_build
  dependsOn: []
  jobs:
  - job: build
    pool:
      vmImage: windows-2019
    steps:

    - task: Cache@2
      inputs:
        key: 'nuget_native | "$(Agent.OS)" | src/**/*.csproj'
        restoreKeys: |
          nuget_native | "$(Agent.OS)"
          nuget_native
        path: $(nugetNativeCacheFolder)
      displayName: Cache Nuget packages

    - task: Cache@2
      inputs:
        key: 'dotnet_cache | "$(Agent.OS)"'
        restoreKeys: |
          dotnet_cache
        path: $(dotnetCache)
      displayName: Cache Dotnet

    - task: UseDotNet@2
      displayName: install dotnet core runtime 2.1
      inputs:
        packageType: runtime
        version: 2.1.x

    - task: UseDotNet@2
      displayName: install dotnet core runtime 3.0
      inputs:
        packageType: runtime
        version: 3.0.x

    - task: UseDotNet@2
      displayName: install dotnet core sdk 3.1
      inputs:
        packageType: sdk
        version: $(dotnetCoreSdkVersion)

    - task: UseDotNet@2
      displayName: install dotnet core sdk 5.0
      inputs:
        packageType: sdk
        version: $(dotnetCoreSdk5Version)

    - task: DotNetCoreCLI@2
      displayName: dotnet build
      inputs:
        command: build
        configuration: $(buildConfiguration)
        arguments: /nowarn:netsdk1138
        projects: |
          src/Datadog.Trace.ClrProfiler.Managed.Loader/Datadog.Trace.ClrProfiler.Managed.Loader.csproj

    - task: NuGetToolInstaller@1
      displayName: install nuget

    - task: NuGetCommand@2
      displayName: nuget restore
      inputs:
        restoreSolution: Datadog.Trace.Native.sln
        verbosityRestore: Detailed

    - task: MSBuild@1
      displayName: msbuild
      inputs:
        solution: Datadog.Trace.proj
        platform: $(buildPlatform)
        configuration: $(buildConfiguration)
        msbuildArguments: /t:BuildCpp;BuildCppTests
        maximumCpuCount: true

    - publish: $(System.DefaultWorkingDirectory)
      artifact: source-native-restore



# managed build stage
- stage: managed_build
  dependsOn: []
  jobs:
  - job: build
    pool:
      vmImage: windows-2019
    steps:

    - task: Cache@2
      inputs:
        key: 'nuget_managed | "$(Agent.OS)" | src/**/*.csproj'
        restoreKeys: |
          nuget_managed | "$(Agent.OS)"
          nuget_managed
        path: $(nugetManagedCacheFolder)
      displayName: Cache Nuget packages

    - task: Cache@2
      inputs:
        key: 'dotnet_cache | "$(Agent.OS)"'
        restoreKeys: |
          dotnet_cache
        path: $(dotnetCache)
      displayName: Cache Dotnet

    - task: UseDotNet@2
      displayName: install dotnet core runtime 2.1
      inputs:
        packageType: runtime
        version: 2.1.x

    - task: UseDotNet@2
      displayName: install dotnet core runtime 3.0
      inputs:
        packageType: runtime
        version: 3.0.x

    - task: UseDotNet@2
      displayName: install dotnet core sdk 3.1
      inputs:
        packageType: sdk
        version: $(dotnetCoreSdkVersion)

    - task: UseDotNet@2
      displayName: install dotnet core sdk 5.0
      inputs:
        packageType: sdk
        version: $(dotnetCoreSdk5Version)

    - task: DotNetCoreCLI@2
      displayName: dotnet restore
      inputs:
        command: restore
        projects: |
          src/**/*.csproj
          test/**/*.Tests.csproj
          benchmarks/**/*.csproj
        restoreDirectory: $(nugetManagedCacheFolder)
        verbosityRestore: Normal

    - task: DotNetCoreCLI@2
      displayName: dotnet build
      inputs:
        command: build
        configuration: $(buildConfiguration)
        arguments: --no-restore /nowarn:netsdk1138 #-l:DatadogLogger,"$(DD_DOTNET_TRACER_MSBUILD)"
        projects: |
          src/**/*.csproj
          test/**/*.Tests.csproj
          benchmarks/**/*.csproj
          !src/Datadog.Trace.Tools.Runner/*.csproj
      env:
        DD_SERVICE_NAME: dd-tracer-dotnet

    - publish: $(System.DefaultWorkingDirectory)
      artifact: source-managed-restore



# managed unit tests stage
- stage: managed_unit_tests 
  dependsOn: managed_build
  jobs:

  # managed test
  - job: unit_tests
    pool:
      vmImage: windows-2019
    steps:

    - checkout: none

    - task: DownloadPipelineArtifact@2
      inputs:
        artifact: source-managed-restore
        path: $(System.DefaultWorkingDirectory)

    - task: Cache@2
      inputs:
        key: 'dotnet_cache | "$(Agent.OS)"'
        restoreKeys: |
          dotnet_cache
        path: $(dotnetCache)
      displayName: Cache Dotnet

    - task: UseDotNet@2
      displayName: install dotnet core runtime 2.1
      inputs:
        packageType: runtime
        version: 2.1.x

    - task: UseDotNet@2
      displayName: install dotnet core runtime 3.0
      inputs:
        packageType: runtime
        version: 3.0.x

    - task: UseDotNet@2
      displayName: install dotnet core sdk 3.1
      inputs:
        packageType: sdk
        version: $(dotnetCoreSdkVersion)

    - task: UseDotNet@2
      displayName: install dotnet core sdk 5.0
      inputs:
        packageType: sdk
        version: $(dotnetCoreSdk5Version)

    - task: DotNetCoreCLI@2
      displayName: dotnet test
      inputs:
        command: test
        configuration: $(buildConfiguration)
        arguments: --no-build --no-restore
        projects: test/**/*.Tests.csproj
      env:
        DD_SERVICE_NAME: dd-tracer-dotnet
